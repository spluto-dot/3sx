name: Build Windows (MSYS2 MinGW64)

on:
  push:
    branches: ["**"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  BUILD_TYPE: Release

jobs:
  windows-mingw64:
    name: Windows (MSYS2 MinGW64)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSYS2 (MinGW64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-headers-git
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-SDL2

      - name: Build third-party deps (FFmpeg etc.)
        shell: msys2 {0}
        run: |
          bash ./build-deps.sh

      - name: Configure (CMake + Ninja + Clang)
        shell: msys2 {0}
        env:
          CC: clang
          CXX: clang++
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build 3sx
        shell: msys2 {0}
        run: |
          cmake --build build --config ${{ env.BUILD_TYPE }} -j | tee build.log

      - name: Show build directory (debug)
        if: always()
        shell: msys2 {0}
        run: |
          ls -la build || true
          find build -maxdepth 2 -type f -name "*.exe" || true

      - name: Stage executable
        shell: msys2 {0}
        run: |
          mkdir -p out/windows
          EXE_PATH="$(find build -maxdepth 2 -type f -name "*.exe" | head -n1)"
          if [ -z "$EXE_PATH" ]; then
            echo "Nenhum execut√°vel encontrado"; exit 1
          fi
          cp -v "$EXE_PATH" out/windows/

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log

      - name: Upload Windows artifact (folder)
        uses: actions/upload-artifact@v4
        with:
          name: 3sx-windows-${{ env.BUILD_TYPE }}
          path: out/windows/
          if-no-files-found: error
